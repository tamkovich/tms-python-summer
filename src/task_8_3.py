# Описать функцию Sin1( x , ε ) вещественного типа (параметры x , ε —
# вещественные, ε > 0), находящую приближенное значение функции sin( x ):
# sin( x ) = x – x ^3 /(3!) + x^ 5 /(5!) – ... + (–1) ^ n · x^( 2·n+1) /((2· n +1)!) + ... .
# В сумме учитывать все слагаемые, модуль которых больше ε . С помощью
# Sin1 найти приближенное значение синуса для данного x при шести данных ε .
import math
def fact(n: int) -> float:
    """
    Функция возвращает фактриал числа
    """
    i = 1
    fakt = 1
    while i <= n:
        fakt *= i
        i += 1
    return fakt


def sin1(x: float, e: float) -> float:
    """
    Считает синус числа по формуле: sin( x ) = x – x ^3 /(3!) + x^ 5 /(5!) –
    ... + (–1) ^ n · x^( 2·n+1) /((2· n +1)!) + ..., пока (–1) ^ n · x^( 2·n+1) /((2· n +1)!)
    не станет меньше параметра е
    """
    sum = x
    spis = [i for i in range(1000) if i != 0]
    for i in spis:
        fun_x = 0
        fun_x = ((-1) ** i) * (x ** (2 * i + 1)) / (fact(2 * i + 1))
        if abs(fun_x) <= e:
            break
        sum += fun_x
    return sum


print(sin1(math.pi/6, 0.01))
